#!/bin/sh

### BEGIN INIT INFO
# Provides:           redis
# Required-Start:     $syslog
# Required-Stop:      $syslog
# Should-Start:       $all
# Should-Stop:        $all
# Default-Start:      2 3 4 5
# Default-Stop:       0 1 6
# X-Interactive:      true
# Short-Description:  start and stop redis
# Description:        persistent key-value db
### END INIT INFO

NAME=redis
PATH=/opt/bin:/opt/sbin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
EXEC=/opt/sbin/redis-server
CLIEXEC=/opt/sbin/redis-cli
CONF=/etc/$NAME/$NAME.conf
PIDFILE=/var/run/$NAME.pid
SOCKET=/var/run/$NAME.sock
PERF=/tmp/redis.sysctl
KERNELPG=/sys/kernel/mm/transparent_hugepage/enabled

[ -x /opt/sbin/redis-server ] || exit 0

set -e

# tune system for better redis performance
if [ ! -f $PERF ]; then
  echo "tunning redis..." >> $PERF
  echo never > $KERNELPG && cat $KERNELPG >> $PERF
  sysctl -w net.core.somaxconn=65535 >> $PERF
  sysctl -w vm.overcommit_memory=1 >> $PERF
  echo "tuned." >> $PERF && cat $PERF
fi

case $1 in
  start)
    if [ ! -f $PIDFILE ]; then
      echo -n "Starting $NAME: "
      start-stop-daemon --start --pidfile $PIDFILE --exec $EXEC -- $CONF
      echo "waiting for redis db to start..."
      while [ ! -f $PIDFILE ]; do
        sleep 0.1;
      done
    fi
    PID=$(cat $PIDFILE)
    echo "running with pid: $PID"
    ;;
  stop)
    if [ ! -f $PIDFILE ]; then
      echo "redis is already stopped"
    else
      PID=$(cat $PIDFILE)
      echo -n "Stopping $NAME: "
      $CLIEXEC -s $SOCKET shutdown
      echo "waiting for shutdown..."
      while [ -x /proc/${PID} ]; do
        sleep 0.1
      done
      echo "db stopped."
    fi
    ;;
  status)
    if [ -f $PIDFILE ]; then
      PID=$(cat $PIDFILE)
      echo "running with pid: $PID"
    else
      echo "stopped."
    fi
    ;;
  restart|force-reload)
    $0 stop && $0 start
    ;;
  *)
    echo "Argument \"$1\" not implemented."
    exit 2
    ;;
esac

exit 0
